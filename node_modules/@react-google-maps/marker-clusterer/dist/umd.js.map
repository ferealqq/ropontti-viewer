{"version":3,"file":"umd.js","sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster\n  className: string\n  clusterClassName: string\n  styles: ClusterIconStyle[]\n  center: google.maps.LatLng | undefined\n  div: HTMLDivElement | null\n  sums: ClusterIconInfo | null\n  visible: boolean\n  url: string\n  height: number\n  width: number\n  anchorText: number[]\n  anchorIcon: number[]\n  textColor: string\n  textSize: number\n  textDecoration: string\n  fontWeight: string\n  fontStyle: string\n  fontFamily: string\n  backgroundPosition: string\n\n  boundsChangedListener: google.maps.MapsEventListener | null\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n    this.cluster = cluster\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass()\n    this.className = this.clusterClassName\n    this.styles = styles\n    this.center = undefined\n    this.div = null\n    this.sums = null\n    this.visible = false\n    this.boundsChangedListener = null\n    this.url = ''\n    this.height = 0\n    this.width = 0\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n    this.backgroundPosition = '0 0'\n    // @ts-ignore\n    this.setMap(cluster.getMap()) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    let cMouseDownInCluster: boolean\n    let cDraggingMapByCluster: boolean\n\n    this.div = document.createElement('div')\n    this.div.className = this.className\n    if (this.visible) {\n      this.show()\n    }\n\n    // @ts-ignore\n    this.getPanes().overlayMouseTarget.appendChild(this.div)\n\n    // Fix for Issue 157\n    this.boundsChangedListener = google.maps.event.addListener(\n      // @ts-ignore\n      this.getMap(),\n      'boundschanged',\n      function boundsChanged() {\n        cDraggingMapByCluster = cMouseDownInCluster\n      }\n    )\n\n    google.maps.event.addListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true\n      cDraggingMapByCluster = false\n    })\n\n    google.maps.event.addListener(\n      this.div,\n      'click',\n      (event: Event) => {\n        cMouseDownInCluster = false\n\n        if (!cDraggingMapByCluster) {\n          const markerClusterer = this.cluster.getClusterer()\n\n          /**\n           * This event is fired when a cluster marker is clicked.\n           * @name MarkerClusterer#click\n           * @param {Cluster} c The cluster that was clicked.\n           * @event\n           */\n          google.maps.event.trigger(markerClusterer, 'click', this.cluster)\n          google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\n\n          // The default click handler follows. Disable it by setting\n          // the zoomOnClick property to false.\n          if (markerClusterer.getZoomOnClick()) {\n            // Zoom into the cluster.\n            const maxZoom = markerClusterer.getMaxZoom()\n\n            const bounds = this.cluster.getBounds()\n\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds)\n\n            // There is a fix for Issue 170 here:\n            setTimeout(function timeout() {\n              // @ts-ignore\n              markerClusterer.getMap().fitBounds(bounds)\n\n              // Don't zoom beyond the max zoom level\n              // @ts-ignore\n              if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n                // @ts-ignore\n                markerClusterer.getMap().setZoom(maxZoom + 1)\n              }\n            }, 100)\n          }\n\n          // Prevent event propagation to the map:\n          event.cancelBubble = true\n\n          if (event.stopPropagation) {\n            event.stopPropagation()\n          }\n        }\n      }\n    )\n\n    google.maps.event.addListener(\n      this.div,\n      'mouseover',\n      () => {\n        /**\n         * This event is fired when the mouse moves over a cluster marker.\n         * @name MarkerClusterer#mouseover\n         * @param {Cluster} c The cluster that the mouse moved over.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseover', this.cluster)\n      }\n    )\n\n    google.maps.event.addListener(\n      this.div,\n      'mouseout',\n      () => {\n        /**\n         * This event is fired when the mouse moves out of a cluster marker.\n         * @name MarkerClusterer#mouseout\n         * @param {Cluster} c The cluster that the mouse moved out of.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseout', this.cluster)\n      }\n    )\n  }\n\n  onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      google.maps.event.clearInstanceListeners(this.div)\n\n      this.div.parentNode.removeChild(this.div)\n\n      this.div = null\n    }\n  }\n\n  draw() {\n    if (this.visible && this.div !== null && this.center) {\n      const { x, y } = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = y + 'px'\n      this.div.style.left = x + 'px'\n    }\n  }\n\n  hide() {\n    if (this.div) {\n      this.div.style.display = 'none'\n    }\n\n    this.visible = false\n  }\n\n  show() {\n    if (this.div && this.center) {\n      let divTitle = ''\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(' ')\n\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle()\n      } else {\n        divTitle = this.sums.title\n      }\n\n      this.div.style.cursor = 'pointer'\n      this.div.style.position = 'absolute'\n      this.div.style.top = `${pos.y}px`\n      this.div.style.left = `${pos.x}px`\n      this.div.style.width = `${this.width}px`\n      this.div.style.height = `${this.height}px`\n\n      const img = document.createElement('img')\n      img.alt = divTitle\n      img.src = this.url\n      img.style.position = 'absolute'\n      img.style.top = `${spriteV}px`\n      img.style.left = `${spriteH}px`\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img.style.clip = `rect(-${spriteV}px, -${spriteH + this.width}px, -${spriteV + this.height}, -${spriteH})`\n      }\n\n      const textElm = document.createElement('div')\n      textElm.style.position = 'absolute'\n      textElm.style.top = `${this.anchorText[0]}px`\n      textElm.style.left = `${this.anchorText[1]}px`\n      textElm.style.color = this.textColor\n      textElm.style.fontSize = `${this.textSize}px`\n      textElm.style.fontFamily = this.fontFamily\n      textElm.style.fontWeight = this.fontWeight\n      textElm.style.fontStyle = this.fontStyle\n      textElm.style.textDecoration = this.textDecoration\n      textElm.style.textAlign = 'center'\n      textElm.style.width = `${this.width}px`\n      textElm.style.lineHeight = `${this.height}px`\n      textElm.innerText = `${this.sums?.text}`\n\n      this.div.innerHTML = ''\n      this.div.appendChild(img)\n      this.div.appendChild(textElm)\n      this.div.title = divTitle\n      this.div.style.display = ''\n    }\n\n    this.visible = true\n  }\n\n  useStyle(sums: ClusterIconInfo) {\n    this.sums = sums\n    const styles = this.cluster.getClusterer().getStyles()\n    const style = styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))]\n\n    this.url = style.url\n    this.height = style.height\n    this.width = style.width\n\n    if (style.className) this.className = `${this.clusterClassName} ${style.className}`\n\n    this.anchorText = style.anchorText || [0, 0]\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n    this.textColor = style.textColor || 'black'\n\n    this.textSize = style.textSize || 11\n\n    this.textDecoration = style.textDecoration || 'none'\n\n    this.fontWeight = style.fontWeight || 'bold'\n\n    this.fontStyle = style.fontStyle || 'normal'\n\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\n\n    this.backgroundPosition = style.backgroundPosition || '0 0'\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point {\n    // @ts-ignore\n    const pos = this.getProjection().fromLatLngToDivPixel(latlng)\n\n    pos.x -= this.anchorIcon[1]\n\n    pos.y -= this.anchorIcon[0]\n\n    // pos.x = pos.x\n\n    // pos.y = pos.y\n\n    return pos\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Clusterer } from './Clusterer'\n\nimport { ClusterIcon } from './ClusterIcon'\n\nimport { MarkerExtended } from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer\n  map: google.maps.Map | google.maps.StreetViewPanorama\n  gridSize: number\n  minClusterSize: number\n  averageCenter: boolean\n  markers: MarkerExtended[]\n  center: google.maps.LatLng | undefined\n  bounds: google.maps.LatLngBounds | null\n  clusterIcon: ClusterIcon\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.map = this.markerClusterer.getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n  }\n\n  getSize(): number {\n    return this.markers.length\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter(): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama {\n    return this.map\n  }\n\n  getClusterer(): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds(): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.clusterIcon.setMap(null)\n\n    this.markers = []\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    delete this.markers\n  }\n\n  addMarker(marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (let i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    return true\n  }\n\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(this.center, this.center)\n    )\n  }\n\n  updateIcon() {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.includes) {\n      return this.markers.includes(marker)\n    }\n\n    for (let i = 0; i < this.markers.length; i++) {\n      if (marker === this.markers[i]) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo,\n} from './types'\n\n/**\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\n * which is not a problem as max array length is 4294967296 (2**32)\n */\nconst CALCULATOR = function CALCULATOR(\n  markers: MarkerExtended[],\n  numStyles: number\n): ClusterIconInfo {\n  const count = markers.length\n\n  const numberOfDigits = count.toString().length\n\n  const index = Math.min(numberOfDigits, numStyles)\n\n  return {\n    text: count.toString(),\n    index,\n    title: '',\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH =\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n\nconst IMAGE_EXTENSION = 'png'\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = 'cluster'\n\nexport class Clusterer {\n  markers: MarkerExtended[]\n  clusters: Cluster[]\n  listeners: google.maps.MapsEventListener[]\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\n  ready: boolean\n  gridSize: number\n  minClusterSize: number\n  maxZoom: number | null\n  styles: ClusterIconStyle[]\n  title: string\n  zoomOnClick: boolean\n  averageCenter: boolean\n  ignoreHidden: boolean\n  enableRetinaIcons: boolean\n  imagePath: string\n  imageExtension: string\n  imageSizes: number[]\n  calculator: TCalculator\n  batchSize: number\n  batchSizeIE: number\n  clusterClass: string\n  timerRefStatic: number | null\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || ''\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.activeMap = this.getMap()\n\n    this.ready = true\n\n    this.repaint()\n\n    // Add the map event listeners\n    this.listeners = [\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.getMap(),\n        'zoom_changed',\n        () => {\n          this.resetViewport(false)\n          // Workaround for this Google bug: when map is at level 0 and \"-\" of\n          // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n          // the map doesn't zoom out any further. In this situation, no \"idle\"\n          // event is triggered so the cluster markers that have been removed\n          // do not get redrawn. Same goes for a zoom in at maxZoom.\n          if (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap().getZoom() === (this.get('minZoom') || 0) ||\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap().getZoom() === this.get('maxZoom')\n          ) {\n            google.maps.event.trigger(this, 'idle')\n          }\n        }\n      ),\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.getMap(),\n        'idle',\n        () => {\n          this.redraw()\n        }\n      ),\n    ]\n  }\n\n  onRemove() {\n    // Put all the managed markers back on the map:\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (let i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i])\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  draw() {}\n\n  setupStyles() {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i],\n      })\n    }\n  }\n\n  fitMapToMarkers() {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.getMap().fitBounds(bounds)\n  }\n\n  getGridSize(): number {\n    return this.gridSize\n  }\n\n  setGridSize(gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize(): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize(minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom(): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom(maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles(styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle(): string {\n    return this.title\n  }\n\n  setTitle(title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick(): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick(zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter(): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (const key in markers) {\n      if (Object.prototype.hasOwnProperty.call(markers, key)) {\n        this.pushMarkerTo(markers[key])\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      google.maps.event.addListener(marker, 'dragend', () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_(marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (let i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i])\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers() {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint() {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (let i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove()\n      }\n    }, 0)\n  }\n\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const projection = this.getProjection()\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\n    )\n\n    trPix.x += this.gridSize\n    trPix.y -= this.gridSize\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\n    )\n\n    blPix.x -= this.gridSize\n    blPix.y += this.gridSize\n\n    // Extend the bounds to contain the new bounds.\n    bounds.extend(\n      // Convert the pixel points back to LatLng nw\n      projection.fromDivPixelToLatLng(trPix)\n    )\n\n    bounds.extend(\n      // Convert the pixel points back to LatLng sw\n      projection.fromDivPixelToLatLng(blPix)\n    )\n\n    return bounds\n  }\n\n  redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport(optHide: boolean) {\n    // Remove all the clusters\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = this.markers[i]\n\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((p1.lat() * Math.PI) / 180) *\n        Math.cos((p2.lat() * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster(marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i]\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters(iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        delete this.timerRefStatic\n      }\n    }\n\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    const mapBounds =\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.getMap().getZoom() > 3\n        ? new google.maps.LatLngBounds(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getSouthWest(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getNorthEast()\n          )\n        : new google.maps.LatLngBounds(\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\n          )\n\n    const bounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds) && (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible()))) {\n        this.addToClosestCluster(marker)\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this)\n\n      for (let i = 0; i < this.clusters.length; i++) {\n        this.clusters[i].updateIcon()\n      }\n    }\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property]\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"names":[],"mappings":"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"}