{"version":3,"file":"esm.min.js","sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster\n  className: string\n  clusterClassName: string\n  styles: ClusterIconStyle[]\n  center: google.maps.LatLng | undefined\n  div: HTMLDivElement | null\n  sums: ClusterIconInfo | null\n  visible: boolean\n  url: string\n  height: number\n  width: number\n  anchorText: number[]\n  anchorIcon: number[]\n  textColor: string\n  textSize: number\n  textDecoration: string\n  fontWeight: string\n  fontStyle: string\n  fontFamily: string\n  backgroundPosition: string\n\n  boundsChangedListener: google.maps.MapsEventListener | null\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n    this.cluster = cluster\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass()\n    this.className = this.clusterClassName\n    this.styles = styles\n    this.center = undefined\n    this.div = null\n    this.sums = null\n    this.visible = false\n    this.boundsChangedListener = null\n    this.url = ''\n    this.height = 0\n    this.width = 0\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n    this.backgroundPosition = '0 0'\n    // @ts-ignore\n    this.setMap(cluster.getMap()) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    let cMouseDownInCluster: boolean\n    let cDraggingMapByCluster: boolean\n\n    this.div = document.createElement('div')\n    this.div.className = this.className\n    if (this.visible) {\n      this.show()\n    }\n\n    // @ts-ignore\n    this.getPanes().overlayMouseTarget.appendChild(this.div)\n\n    // Fix for Issue 157\n    this.boundsChangedListener = google.maps.event.addListener(\n      // @ts-ignore\n      this.getMap(),\n      'boundschanged',\n      function boundsChanged() {\n        cDraggingMapByCluster = cMouseDownInCluster\n      }\n    )\n\n    google.maps.event.addListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true\n      cDraggingMapByCluster = false\n    })\n\n    google.maps.event.addListener(\n      this.div,\n      'click',\n      (event: Event) => {\n        cMouseDownInCluster = false\n\n        if (!cDraggingMapByCluster) {\n          const markerClusterer = this.cluster.getClusterer()\n\n          /**\n           * This event is fired when a cluster marker is clicked.\n           * @name MarkerClusterer#click\n           * @param {Cluster} c The cluster that was clicked.\n           * @event\n           */\n          google.maps.event.trigger(markerClusterer, 'click', this.cluster)\n          google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\n\n          // The default click handler follows. Disable it by setting\n          // the zoomOnClick property to false.\n          if (markerClusterer.getZoomOnClick()) {\n            // Zoom into the cluster.\n            const maxZoom = markerClusterer.getMaxZoom()\n\n            const bounds = this.cluster.getBounds()\n\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds)\n\n            // There is a fix for Issue 170 here:\n            setTimeout(function timeout() {\n              // @ts-ignore\n              markerClusterer.getMap().fitBounds(bounds)\n\n              // Don't zoom beyond the max zoom level\n              // @ts-ignore\n              if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n                // @ts-ignore\n                markerClusterer.getMap().setZoom(maxZoom + 1)\n              }\n            }, 100)\n          }\n\n          // Prevent event propagation to the map:\n          event.cancelBubble = true\n\n          if (event.stopPropagation) {\n            event.stopPropagation()\n          }\n        }\n      }\n    )\n\n    google.maps.event.addListener(\n      this.div,\n      'mouseover',\n      () => {\n        /**\n         * This event is fired when the mouse moves over a cluster marker.\n         * @name MarkerClusterer#mouseover\n         * @param {Cluster} c The cluster that the mouse moved over.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseover', this.cluster)\n      }\n    )\n\n    google.maps.event.addListener(\n      this.div,\n      'mouseout',\n      () => {\n        /**\n         * This event is fired when the mouse moves out of a cluster marker.\n         * @name MarkerClusterer#mouseout\n         * @param {Cluster} c The cluster that the mouse moved out of.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseout', this.cluster)\n      }\n    )\n  }\n\n  onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      google.maps.event.clearInstanceListeners(this.div)\n\n      this.div.parentNode.removeChild(this.div)\n\n      this.div = null\n    }\n  }\n\n  draw() {\n    if (this.visible && this.div !== null && this.center) {\n      const { x, y } = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = y + 'px'\n      this.div.style.left = x + 'px'\n    }\n  }\n\n  hide() {\n    if (this.div) {\n      this.div.style.display = 'none'\n    }\n\n    this.visible = false\n  }\n\n  show() {\n    if (this.div && this.center) {\n      let divTitle = ''\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(' ')\n\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle()\n      } else {\n        divTitle = this.sums.title\n      }\n\n      this.div.style.cursor = 'pointer'\n      this.div.style.position = 'absolute'\n      this.div.style.top = `${pos.y}px`\n      this.div.style.left = `${pos.x}px`\n      this.div.style.width = `${this.width}px`\n      this.div.style.height = `${this.height}px`\n\n      const img = document.createElement('img')\n      img.alt = divTitle\n      img.src = this.url\n      img.style.position = 'absolute'\n      img.style.top = `${spriteV}px`\n      img.style.left = `${spriteH}px`\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img.style.clip = `rect(-${spriteV}px, -${spriteH + this.width}px, -${spriteV + this.height}, -${spriteH})`\n      }\n\n      const textElm = document.createElement('div')\n      textElm.style.position = 'absolute'\n      textElm.style.top = `${this.anchorText[0]}px`\n      textElm.style.left = `${this.anchorText[1]}px`\n      textElm.style.color = this.textColor\n      textElm.style.fontSize = `${this.textSize}px`\n      textElm.style.fontFamily = this.fontFamily\n      textElm.style.fontWeight = this.fontWeight\n      textElm.style.fontStyle = this.fontStyle\n      textElm.style.textDecoration = this.textDecoration\n      textElm.style.textAlign = 'center'\n      textElm.style.width = `${this.width}px`\n      textElm.style.lineHeight = `${this.height}px`\n      textElm.innerText = `${this.sums?.text}`\n\n      this.div.innerHTML = ''\n      this.div.appendChild(img)\n      this.div.appendChild(textElm)\n      this.div.title = divTitle\n      this.div.style.display = ''\n    }\n\n    this.visible = true\n  }\n\n  useStyle(sums: ClusterIconInfo) {\n    this.sums = sums\n    const styles = this.cluster.getClusterer().getStyles()\n    const style = styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))]\n\n    this.url = style.url\n    this.height = style.height\n    this.width = style.width\n\n    if (style.className) this.className = `${this.clusterClassName} ${style.className}`\n\n    this.anchorText = style.anchorText || [0, 0]\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n    this.textColor = style.textColor || 'black'\n\n    this.textSize = style.textSize || 11\n\n    this.textDecoration = style.textDecoration || 'none'\n\n    this.fontWeight = style.fontWeight || 'bold'\n\n    this.fontStyle = style.fontStyle || 'normal'\n\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\n\n    this.backgroundPosition = style.backgroundPosition || '0 0'\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point {\n    // @ts-ignore\n    const pos = this.getProjection().fromLatLngToDivPixel(latlng)\n\n    pos.x -= this.anchorIcon[1]\n\n    pos.y -= this.anchorIcon[0]\n\n    // pos.x = pos.x\n\n    // pos.y = pos.y\n\n    return pos\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Clusterer } from './Clusterer'\n\nimport { ClusterIcon } from './ClusterIcon'\n\nimport { MarkerExtended } from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer\n  map: google.maps.Map | google.maps.StreetViewPanorama\n  gridSize: number\n  minClusterSize: number\n  averageCenter: boolean\n  markers: MarkerExtended[]\n  center: google.maps.LatLng | undefined\n  bounds: google.maps.LatLngBounds | null\n  clusterIcon: ClusterIcon\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.map = this.markerClusterer.getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n  }\n\n  getSize(): number {\n    return this.markers.length\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter(): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama {\n    return this.map\n  }\n\n  getClusterer(): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds(): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.clusterIcon.setMap(null)\n\n    this.markers = []\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    delete this.markers\n  }\n\n  addMarker(marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (let i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    return true\n  }\n\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(this.center, this.center)\n    )\n  }\n\n  updateIcon() {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.includes) {\n      return this.markers.includes(marker)\n    }\n\n    for (let i = 0; i < this.markers.length; i++) {\n      if (marker === this.markers[i]) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo,\n} from './types'\n\n/**\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\n * which is not a problem as max array length is 4294967296 (2**32)\n */\nconst CALCULATOR = function CALCULATOR(\n  markers: MarkerExtended[],\n  numStyles: number\n): ClusterIconInfo {\n  const count = markers.length\n\n  const numberOfDigits = count.toString().length\n\n  const index = Math.min(numberOfDigits, numStyles)\n\n  return {\n    text: count.toString(),\n    index,\n    title: '',\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH =\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n\nconst IMAGE_EXTENSION = 'png'\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = 'cluster'\n\nexport class Clusterer {\n  markers: MarkerExtended[]\n  clusters: Cluster[]\n  listeners: google.maps.MapsEventListener[]\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\n  ready: boolean\n  gridSize: number\n  minClusterSize: number\n  maxZoom: number | null\n  styles: ClusterIconStyle[]\n  title: string\n  zoomOnClick: boolean\n  averageCenter: boolean\n  ignoreHidden: boolean\n  enableRetinaIcons: boolean\n  imagePath: string\n  imageExtension: string\n  imageSizes: number[]\n  calculator: TCalculator\n  batchSize: number\n  batchSizeIE: number\n  clusterClass: string\n  timerRefStatic: number | null\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || ''\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.activeMap = this.getMap()\n\n    this.ready = true\n\n    this.repaint()\n\n    // Add the map event listeners\n    this.listeners = [\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.getMap(),\n        'zoom_changed',\n        () => {\n          this.resetViewport(false)\n          // Workaround for this Google bug: when map is at level 0 and \"-\" of\n          // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n          // the map doesn't zoom out any further. In this situation, no \"idle\"\n          // event is triggered so the cluster markers that have been removed\n          // do not get redrawn. Same goes for a zoom in at maxZoom.\n          if (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap().getZoom() === (this.get('minZoom') || 0) ||\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap().getZoom() === this.get('maxZoom')\n          ) {\n            google.maps.event.trigger(this, 'idle')\n          }\n        }\n      ),\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.getMap(),\n        'idle',\n        () => {\n          this.redraw()\n        }\n      ),\n    ]\n  }\n\n  onRemove() {\n    // Put all the managed markers back on the map:\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (let i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i])\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  draw() {}\n\n  setupStyles() {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i],\n      })\n    }\n  }\n\n  fitMapToMarkers() {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.getMap().fitBounds(bounds)\n  }\n\n  getGridSize(): number {\n    return this.gridSize\n  }\n\n  setGridSize(gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize(): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize(minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom(): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom(maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles(styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle(): string {\n    return this.title\n  }\n\n  setTitle(title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick(): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick(zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter(): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (const key in markers) {\n      if (Object.prototype.hasOwnProperty.call(markers, key)) {\n        this.pushMarkerTo(markers[key])\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      google.maps.event.addListener(marker, 'dragend', () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_(marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (let i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i])\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers() {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint() {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (let i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove()\n      }\n    }, 0)\n  }\n\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const projection = this.getProjection()\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\n    )\n\n    trPix.x += this.gridSize\n    trPix.y -= this.gridSize\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\n    )\n\n    blPix.x -= this.gridSize\n    blPix.y += this.gridSize\n\n    // Extend the bounds to contain the new bounds.\n    bounds.extend(\n      // Convert the pixel points back to LatLng nw\n      projection.fromDivPixelToLatLng(trPix)\n    )\n\n    bounds.extend(\n      // Convert the pixel points back to LatLng sw\n      projection.fromDivPixelToLatLng(blPix)\n    )\n\n    return bounds\n  }\n\n  redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport(optHide: boolean) {\n    // Remove all the clusters\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = this.markers[i]\n\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((p1.lat() * Math.PI) / 180) *\n        Math.cos((p2.lat() * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster(marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i]\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters(iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        delete this.timerRefStatic\n      }\n    }\n\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    const mapBounds =\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.getMap().getZoom() > 3\n        ? new google.maps.LatLngBounds(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getSouthWest(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getNorthEast()\n          )\n        : new google.maps.LatLngBounds(\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\n          )\n\n    const bounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds) && (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible()))) {\n        this.addToClosestCluster(marker)\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this)\n\n      for (let i = 0; i < this.clusters.length; i++) {\n        this.clusters[i].updateIcon()\n      }\n    }\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property]\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"names":["ClusterIcon","cluster","styles","getClusterer","extend","google","maps","OverlayView","this","clusterClassName","getClusterClass","className","center","undefined","div","sums","visible","boundsChangedListener","url","height","width","anchorText","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setMap","getMap","prototype","onAdd","cMouseDownInCluster","cDraggingMapByCluster","_this","document","createElement","show","getPanes","overlayMouseTarget","appendChild","event","addListener","markerClusterer_1","trigger","getZoomOnClick","maxZoom_1","getMaxZoom","bounds_1","getBounds","fitBounds","setTimeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","_a","getPosFromLatLng","x","y","style","top","left","display","divTitle","bp","split","spriteH","parseInt","replace","spriteV","pos","title","getTitle","cursor","position","concat","img","alt","src","enableRetinaIcons","clip","textElm","color","fontSize","textAlign","lineHeight","innerText","text","innerHTML","useStyle","getStyles","Math","min","length","max","index","setCenter","latlng","getProjection","fromLatLngToDivPixel","Cluster","markerClusterer","map","gridSize","getGridSize","minClusterSize","getMinimumClusterSize","averageCenter","getAverageCenter","markers","bounds","clusterIcon","getSize","getMarkers","getCenter","LatLngBounds","i","getPosition","remove","addMarker","marker","isMarkerAlreadyAdded","length_1","LatLng","lat","lng","calculateBounds","isAdded","push","mCount","maxZoom","zoom","isMarkerInClusterBounds","contains","getExtendedBounds","updateIcon","getCalculator","includes","CALCULATOR","numStyles","count","numberOfDigits","toString","IMAGE_SIZES","Clusterer","optMarkers","optOptions","clusters","listeners","activeMap","ready","minimumClusterSize","zoomOnClick","ignoreHidden","imagePath","imageExtension","imageSizes","calculator","batchSize","batchSizeIE","clusterClass","navigator","userAgent","toLowerCase","indexOf","timerRefStatic","setupStyles","addMarkers","repaint","resetViewport","get","redraw","fitMapToMarkers","setGridSize","setMinimumClusterSize","setMaxZoom","setStyles","setTitle","setZoomOnClick","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","setCalculator","getBatchSizeIE","setBatchSizeIE","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","optNoDraw","pushMarkerTo","key","Object","hasOwnProperty","call","getDraggable","removeMarker_","splice","removeMarker","removed","removeMarkers","clearMarkers","oldClusters","slice","projection","trPix","getNorthEast","blPix","getSouthWest","fromDivPixelToLatLng","createClusters","optHide","distanceBetweenPoints","p1","p2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds","addToClosestCluster","distance","clusterToAddTo","d","iFirst","window","clearTimeout","mapBounds","iLast","getVisible","obj1","obj2","object","property","apply"],"mappings":"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"}